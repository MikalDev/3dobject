{
  "languageTag": "en-US",
  "fileDescription": "Strings for 3DObject Plugin",
  "text": {
    "plugins": {
      "mikal_3dobject": {
        "name": "3D Object",
        "description": "3D Object using the gltf/glb file format.",
        "help-url": "https://kindeyegames.itch.io/c3-3dobject-alpha",
        "properties": {
          "obj-path": {
            "name": "obj path",
            "desc": "obj file path."
          },
          "mtl-path": {
            "name": "mtl path",
            "desc": "mtl file path."
          },
          "gtlf-path": {
            "name": "gltf path",
            "desc": "File path, supports .gltf or .glb files (subfoldername/filename.glb)."
          },
          "scale": {
            "name": "Scale",
            "desc": "Scale of the object."
          },
          "edit-image": {
            "name": "Edit image",
            "desc": "Edit image.",
            "link-text": "Edit image"
          },
          "z-elevation": {
            "name": "Obsolete, use zElevation",
            "desc": "Obsolete, use zElevation."
          },
          "angle-x": {
            "name": "Angle x",
            "desc": "Angle x."
          },
          "angle-y": {
            "name": "Angle y",
            "desc": "Angle y."
          },
          "angle-z": {
            "name": "Angle z",
            "desc": "Angle z."
          },
          "rotation-order": {
            "name": "Rotation order",
            "desc": "Axis euler angle rotation order.",
            "items": {
              "xyz": "XYZ",
              "xzy": "XZY",
              "yxz": "YXZ",
              "yzx": "YZX",
              "zxy": "ZXY",
              "zyx": "ZYX" 
            }
          },
          "debug": {
            "name": "Debug",
            "desc": "Whether debug info should be logged into the console."
          },
          "animation-blend": {
            "name": "Animation blend",
            "desc": "Animation blend time in seconds."
          },
          "instance-model": {
            "name": "Instance model data",
            "desc": "Whether each instance can have its own model data."
          },
          "image-texture": {
            "name": "Image texture",
            "desc": "Use only the image texture, ignore materials and other textures."
          },
          "x-scale": {
            "name": "X scale",
            "desc": "X scale (divisor, larger value makes model smaller)."
          },
          "y-scale": {
            "name": "Y scale",
            "desc": "Y scale (divisor, larger value makes model smaller)."
          },
          "z-scale": {
            "name": "Z scale",
            "desc": "Z scale (divisor, larger value makes model smaller)."
          },
          "wireframe": {
            "name": "Wireframe",
            "desc": "Render model as wireframe."
          },
          "worker-animation": {
            "name": "Worker animation",
            "desc": "Offload animation to worker, useful for animated models with complex geometry."
          },
          "cpu-xform": {
            "name": "Worker BFC",
            "desc": "Whether back face culling should be done by a worker."
          }
        },
        "aceCategories": {
          "3dobject" : "3DObject Misc",
          "lighting" : "3DObject Lighting",
          "animations" : "3DObject Animations",
          "transform" : "3DObject Transform",
          "material" : "3DObject Material"
        },
        "conditions": {
          "is-node-enabled": {
            "list-name": "Is node enabled",
            "display-text": "Is node {0} enabled",
            "description": "True if node is enabled.",
            "params": {
              "node-name": {
                "name": "Node",
                "desc": "Enter the name of node to check if enabled."
              }
            }
          },
          "on-loaded": {
            "list-name": "On loaded",
            "display-text": "On loaded",
            "description": "Triggers when 3DObject has completed loading the 3D model."
          },
          "is-loaded": {
            "list-name": "Is Loaded",
            "display-text": "Is loaded",
            "description": "True if the 3DObject has loaded its 3D model."
          },
          "is-animation-finished": {
            "list-name": "Is animation finished",
            "display-text": "Is animation finished",
            "description": "True if the animation has finished (only true if not looping)."
          },
          "on-animation-finished": {
            "list-name": "On any animation finished",
            "display-text": "On any animation finished",
            "description": "Triggers when the animation has finished (only triggered if not looping)."
          },
          "on-animation-name-finished": {
            "list-name": "On animation finished",
            "display-text": "On animation [b]{0}[/b] finished",
            "description": "Triggers when the named animation has finished (only triggered if not looping).",
            "params": {
              "name": {
                "name": "Name",
                "desc": "Enter the name of animation to check if playing."
              }
            }
          },
          "is-wireframe-enabled": {
            "list-name": "Is wireframe enabled",
            "display-text": "Is wireframe enabled",
            "description": "True if model is renered as wireframe."
          },
          "is-playing": {
            "list-name": "Is playing",
            "display-text": "Is animation [b]{0}[/b] playing",
            "description": "Is the named animation playing.",
            "params": {
              "animation-name": {
                "name": "Animation",
                "desc": "Enter the name of animation to check if playing."
              }
            }
          }
        },
        "actions": {
          "set-gpu-skinning": {
            "list-name": "Set gpu skinning",
            "display-text": "Set gpu skinning {0}",
            "description": "Set gpu skinning (static geometry must be enabled).",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable gpu skinning."
              }
            }
          },
          "rotate": {
            "list-name": "Rotate",
            "display-text": "Rotate [i]{0}[/i] degrees around [i]{1}[/i] axis",
            "description": "Rotate object around a specific axis.",
            "params": {
              "angle": {
                "name": "Angle",
                "desc": "Rotate object by a number of degrees"
              },
              "axis": {
                "name": "Axis",
                "desc": "Axis to rotate object around.",
                "items": {
                  "X": "X",
                  "Y": "Y",
                  "Z": "Z"
                }
              }
            }
          },
          "set-z-elevation-0": {
            "list-name": "Set z elevation",
            "display-text": "Set z elevation to [i]{0}[/i]",
            "description": "Set z elevation (world z axis, depth component).",
            "params": {
                  "z-elevation": {
                      "name": "Zelevation",
                      "desc": "Zelevation (z axis, depth)"
                  }
              }
          },
          "set-local-center": {
            "list-name": "Set local center",
            "display-text": "Set local center to [i]{0}, {1}, {2}[/i]",
            "description": "Set the local center of the 3DObject in the model files coordinate system.",
            "params": {
              "x": {
                "name": "X",
                "desc": "X local coordinate of center"
              },
              "y": {
                "name": "Y",
                "desc": "Y local coordinate of center"
              },
              "z": {
                "name": "Z",
                "desc": "Z local coordinate of center"
              }
            }
          },
          "set-scale": {
            "list-name": "Set scale",
            "display-text": "Set scale to [i]{0}[/i]",
            "description": "Set scale from original object size.",
            "params": {
                  "scale": {
                      "name": "Scale",
                      "desc": "The size to scale from the original size."
                  }
              }
          },
          "set-z-height": {
            "list-name": "Set z height",
            "display-text": "Set z height to [i]{0}[/i]",
            "description": "Set z height, used for viewport clipping.",
            "params": {
                  "z-height": {
                      "name": "Z height",
                      "desc": "The z height of the object, used for viewport clipping."
                  }
              }
          },
          "set-rotation": {
            "list-name": "Set X, Y, Z rotation",
            "display-text": "Set rotation to [b]{0}({0}, {1}, {2}[/b], [i]({3} rotation order)[/i]",
            "description": "Set rotation of object from the original position, with rotation order.",
            "params": {
              "x": {
                "name": "X",
                "desc": "X angle of rotation."
              },
              "y": {
                "name": "Y",
                "desc": "Y angle of rotation."
              },
              "z": {
                "name": "Z",
                "desc": "Z angle of rotation."
              },
              "rotation-order": {
                "name": "Rotation order",
                "desc": "Order to rotate object around axes.",
                "items": {
                  "xyz": "XYZ",
                  "xzy": "XZY",
                  "yxz": "YXZ",
                  "yzx": "YZX",
                  "zxy": "ZXY",
                  "zyx": "ZYX"
                }
              }
            }
          },
          "play-animation": {
            "list-name": "Play animation",
            "display-text": "Play animation [b]{0}[/b], [i](is looping {1})[/i]",
            "description": "Play animation by name.",
            "params": {
                  "animation": {
                      "name": "Animation",
                      "desc": "The animation name to play."
                  },
                  "loop": {
                    "name": "Loop",
                    "desc": "Loop animation."
                }
              }
          },
          "stop-animation": {
            "list-name": "Pause animation",
            "display-text": "Pause animation",
            "description": "Pause playing animation.",
            "params": {
            }

          },
          "unpause-animation": {
            "list-name": "Resume animation",
            "display-text": "Resume animation",
            "description": "Unpause playing animation.",
            "params": {
            }

          },
          "set-animation-rate": {
            "list-name": "Set animation rate",
            "display-text": "Set animation rate to [i]{0}[/i]",
            "description": "Set animation rate (FPS).",
            "params": {
                  "rate": {
                      "name": "Rate",
                      "desc": "Rate (FPS)."
                  }
              }
          },
          "set-animation-speed": {
            "list-name": "Set animation speed",
            "display-text": "Set animation speed to [i]{0}x[/i]",
            "description": "Set animation speed.",
            "params": {
                  "speed": {
                      "name": "Speed",
                      "desc": "Speed (multiplier)."
                  }
              }
          },
          "set-x-scale": {
            "list-name": "Set X scale",
            "display-text": "Set X scale to [i]{0}[/i]",
            "description": "Set X scale.",
            "params": {
                  "x-scale": {
                      "name": "X scale",
                      "desc": "X scale."
                  }
              }
          },
          "set-y-scale": {
            "list-name": "Set Y scale",
            "display-text": "Set Y scale to [i]{0}[/i]",
            "description": "Set Y scale.",
            "params": {
                  "y-scale": {
                      "name": "Y scale",
                      "desc": "Y scale."
                  }
              }
          },
          "set-z-scale": {
            "list-name": "Set Z scale",
            "display-text": "Set Z scale to [i]{0}[/i]",
            "description": "Set Z scale.",
            "params": {
                  "z-scale": {
                      "name": "Z scale",
                      "desc": "Z scale."
                  }
              }
          },
          "update-bbox": {
            "list-name": "Update bounding box",
            "display-text": "Update bounding box",
            "description": "Update bounding box based on current 3D animation.",
            "params": {
            }
          },
          "load-model": {
            "list-name": "Load model",
            "display-text": "Load model [i]{0}[/i]",
            "description": "Load model from path.",
            "params": {
                  "gltf-path": {
                      "name": "Gltf path",
                      "desc": "Gltf/glb project file name or URL to Gltf/glb file (with URL, it will not show in the editor)."
                  }
              }
          },
          "load-material": {
            "list-name": "Load material",
            "display-text": "Load material [i]{1}[/i] from [i]{0}[/i]",
            "description": "Load material from path.",
            "params": {
              "material-path": {
                  "name": "Material path",
                  "desc": "Material project filename or URL to material (.png) file."
              },
              "material-name": {
                "name": "Material name",
                "desc": "Material name."
              }
            }
          },
          "load-material-from-sprite": {
            "list-name": "Load material from sprite",
            "display-text": "Load material [i]{1}[/i] from sprite uid [i]{0}[/i]",
            "description": "Load material from sprite.",
            "params": {
              "sprite-uid": {
                  "name": "Sprite UID",
                  "desc": "Sprite instance UID."
              },
              "material-name": {
                "name": "Material name",
                "desc": "Material name."
              }
            }
          },
          "unload-material-from-sprite": {
            "list-name": "Unload material from sprite",
            "display-text": "Unload material [i]{0}[/i] from sprite",
            "description": "Unload material from sprite.",
            "params": {
              "material-name": {
                "name": "Material name",
                "desc": "Material name."
              }
            }
          },
          "set-mesh-material": {
            "list-name": "Set node material",
            "display-text": "Set node [i]{0}[/i] to material [i]{1}[/i]",
            "description": "Set node to use a material.",
            "params": {
              "mesh-name": {
                  "name": "Node name",
                  "desc": "Node name to set material to."
              },
              "material-name": {
                "name": "Material name",
                "desc": "Material name (existing or the material name used when loading)."
              }
            }
          },
          "enable-node": {
            "list-name": "Enable node",
            "display-text": "Set node [i]{0}[/i] enable to [i]{1}[/i]",
            "description": "Enable or disable node for render.",
            "params": {
              "node-name": {
                  "name": "Node name",
                  "desc": "Node name to enable or disable."
              },
              "enable": {
                "name": "Enable",
                "desc": "Enable or disable node for render."
              }
            }
          },
          "delete-material": {
            "list-name": "Delete material",
            "display-text": "Delete material [i]{0}[/i]",
            "description": "Release material (remove from GPU memory).",
            "params": {
              "material-name": {
                "name": "Material name",
                "desc": "Material name (existing or the material name used when loading)."
              }
            }
          },
          "set-origin-x": {
            "list-name": "Set origin X",
            "display-text": "Set origin X to [i]{0}[/i]",
            "description": "Set origin X (Normalized value, 0.5 is center).",
            "params": {
                  "origin-x": {
                      "name": "X origin",
                      "desc": "X origin (Normalized value, 0.5 is center)."
                  }
              }
          },
          "set-origin-y": {
            "list-name": "Set origin Y",
            "display-text": "Set origin Y to [i]{0}[/i]",
            "description": "Set origin Y (Normalized value, 0.5 is center).",
            "params": {
                  "origin-y": {
                      "name": "Y origin",
                      "desc": "Y origin (Normalized value, 0.5 is center)."
                  }
              }
          },
          "set-bbox-scale": {
            "list-name": "Set bounding box scale",
            "display-text": "Set bounding box scale to [i]{0}[/i]",
            "description": "Set bounding box scale.",
            "params": {
                  "scale": {
                      "name": "Scale",
                      "desc": "Scale factor for bounding box."
                  }
              }
          },
          "enable-wireframe": {
            "list-name": "Enable wireframe",
            "display-text": "Set wireframe enable to [i]{0}[/i]",
            "description": "Enable or disable wireframe render.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable or disable node wireframe render."
              }
            }
          },
          "set-wireframe-widths": {
            "list-name": "Set wireframe  X, Y, Z line widths",
            "display-text": "Set wireframe line widths to [i]{0}, {1}, {2}[/i]",
            "description": "Set wireframe X, y, Z widths.",
            "params": {
              "x-wireframe-width": {
                  "name": "X width",
                  "desc": "X wireframe width."
              },
              "y-wireframe-width": {
                "name": "Y width",
                "desc": "Y wireframe width."
              },
              "z-wireframe-width": {
                "name": "Z width",
                "desc": "Z wireframe width."
              }
            }
          },
          "set-camera-vector-pos": {
            "list-name": "Set camera vector and position",
            "display-text": "Set camera vector to [i]({0}, {1}, {2})[/i] and position to [i]({3}, {4}, {5}[/i]",
            "description": "Set camera vector and position.",
            "params": {
              "x": {
                  "name": "Vector X",
                  "desc": "X vector."
              },
              "y": {
                "name": "Vector Y",
                "desc": "Y vector."
              },
              "z": {
                "name": "Vector Z",
                "desc": "Z vector."
              },
              "x-pos": {
                "name": "Camera X",
                "desc": "X position."
              },
              "y-pos": {
                "name": "Camera Y",
                "desc": "Y position."
              },
              "z-pos": {
                "name": "Camera Z",
                "desc": "Z position."
              }
            }
          },
          "offset-node-uv": {
            "list-name": "Offset node UV",
            "display-text": "Offset node [b]{0}[/b] UV by [i]({1}, {2})[/i]",
            "description": "Offset a nodes UV texture coordinates.",
            "params": {
              "node-name": {
                  "name": "Node name",
                  "desc": "Node name to offset UVs."
              },
              "u-offset": {
                "name": "U Offset",
                "desc": "U Offset (-1.0 to 1.0)."
              },
              "v-offset": {
                "name": "V Offset",
                "desc": "V Offset (-1.0 to 1.0)."
              }
            }
          },
          "offset-material-uv": {
            "list-name": "Offset material UV",
            "display-text": "Offset material [b]{0})[/b] UV by [i]({1}, {2})[/i]",
            "description": "Offset material UV texture coordinates.",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name to offset UVs."
              },
              "u-offset": {
                "name": "U Offset",
                "desc": "U Offset (-1.0 to 1.0)."
              },
              "v-offset": {
                "name": "V Offset",
                "desc": "V Offset (-1.0 to 1.0)."
              }
            }
          },
          "rotate-material-uv": {
            "list-name": "Rotate material UV",
            "display-text": "Rotate material [b]{0})[/b] UV by {1} degrees around [i]({2}, {3})[/i]",
            "description": "Rotate material UV texture coordinates around point.",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name to rotate UVs."
              },
              "angle": {
                "name": "Angle",
                "desc": "Angle in degrees."
              },
              "x": {
                "name": "X",
                "desc": "Center X to rotate around (0-1)."
              },
              "y": {
                "name": "Y",
                "desc": "Center Y to rotate around (0-1)."
              }
            }
          },
          "set-light-dir": {
            "list-name": "Set light direction",
            "display-text": "Set light direction to [i]({0}, {1}, {2})[/i]",
            "description": "Set light direction.",
            "params": {
              "x": {
                "name": "X",
                "desc": "Set X light direction."
              },
              "y": {
                "name": "Y",
                "desc": "Set Y light direction."
              },
              "z": {
                "name": "Z",
                "desc": "Set Z light direction."
              }
            }
          },
          "set-view-pos": {
            "list-name": "Set view position",
            "display-text": "Set view position to i]({0}, {1}, {2})[/i]",
            "description": "Set view position for specular lighting.",
            "params": {
              "x": {
                "name": "X",
                "desc": "Set X view position."
              },
              "y": {
                "name": "Y",
                "desc": "Set Y view position."
              },
              "z": {
                "name": "Z",
                "desc": "Set Z view position."
              }
            }
          },
          "load-model-from-template": {
            "list-name": "Load model from prefab instance",
            "display-text": "Load model from prefab uid [i]{0}[/i]",
            "description": "Load model from prefab instance of object.",
            "params": {
                  "template-uid": {
                      "name": "Prefab uid",
                      "desc": "Prefab uid of instance to load model from, prefab must already be loaded."
                  }
              }
          },
          "set-animation-blend": {
            "list-name": "Set animation blend time",
            "display-text": "Set animation blend time to [i]{0}[/i] seconds",
            "description": "Set animation blend time.",
            "params": {
                  "blend-time": {
                      "name": "Blend time",
                      "desc": "Blend time in seconds."
                  }
              }
          },
          "enable-light": {
            "list-name": "Enable lights",
            "display-text": "Set lights enabled: {0}",
            "description": "Enable lights",
            "params": {
                  "enable": {
                      "name": "Enable",
                      "desc": "Enable."
                  }
            }
          },
          "update-light": {
            "list-name": "Update light",
            "display-text": "Update light {0}",
            "description": "Update light.",
            "params": {
                  "enable": {
                      "name": "Update",
                      "desc": "Update light."
                  }
            }
          },
          "add-lights": {
            "list-name": "Add light",
            "display-text": "Add light [i]({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17})[/i]",
            "description": "Add light.",
            "params": {
                "name": {
                    "name": "Name",
                    "desc": "Light name."
                },
                "enable": {
                    "name": "Enable",
                    "desc": "Enable."
                },
                "color": {
                  "name": "Color",
                  "desc": "Color, use RgbEx()."
                },
                "x": {
                  "name": "X",
                  "desc": "X."
                },
                "y": {
                  "name": "Y",
                  "desc": "Y."
                },
                "z": {
                  "name": "Z",
                  "desc": "Z."
                },
                "enable-spot": {
                  "name": "Enable spot",
                  "desc": "Enable spot light."
                },
                "dir-x": {
                  "name": "Dir X",
                  "desc": "Direction X."
                },
                "dir-y": {
                  "name": "Dir Y",
                  "desc": "Direction Y."
                },
                "dir-z": {
                  "name": "Dir Z",
                  "desc": "Direction Z."
                },
                "cutoff": {
                    "name": "Spot cone angle",
                    "desc": "Spot light cone angle."
                },
                "edge": {
                  "name": "Soft edge",
                  "desc": "Soft edge (0-1)."
                },
                "att-constant": {
                  "name": "Attenuation constant",
                  "desc": "Constant attenuation (1.0+)."
                },
                "att-linear": {
                  "name": "Attenuation linear",
                  "desc": "Linear distance attenuation."
                },
                "att-square": {
                  "name": "Attenuation square",
                  "desc": "Square distance attenuation."
                },
                "specular-enable": {
                  "name": "Specular enable",
                  "desc": "Enable specular light."
                },
                "specular-att": {
                  "name": "Specular attenuation",
                  "desc": "Attenuate specular light."
                },
                "specular-power": {
                  "name": "Specular shininess",
                  "desc": "Shiniess of specular light (1-128)."
                }                
            }
          },
          "enable-lights": {
            "list-name": "Enable light",
            "display-text": "Set light [b]{0}[/b] enabled: {1}",
            "description": "Enable light.",
            "params": {
                  "name": {
                    "name": "Name",
                    "desc": "Light name."
                },              
                  "enable": {
                      "name": "Enable",
                      "desc": "Enable light."
                  }
            }
          },
          "delete-lights": {
            "list-name": "Delete light",
            "display-text": "Delete light [b]{0}[/b] ",
            "description": "Delete light",
            "params": {
                  "name": {
                    "name": "Name",
                    "desc": "Light name."
                }              
            }
          },
          "set-ambient-color": {
            "list-name": "Set ambient color",
            "display-text": "Set ambient color [i]{0}[/i]",
            "description": "Set ambient color",
            "params": {
                  "color": {
                      "name": "Color",
                      "desc": "Color value, use rgbaEx()."
                  }
            }
          },
          "set-node-morph-weight": {
            "list-name": "Set node morph target weight",
            "display-text": "Set node [b]{0}[/b] target [i]{1}[/i] weight to [i]{2}[/i]",
            "description": "Set node morph target weight.",
            "params": {
              "name": {
                "name": "Node name",
                "desc": "Node name."
              },
              "index": {
                "name": "Target",
                "desc": "Target index."
              },
              "weight": {
                "name": "Weight",
                "desc": "Target weight."
              }
            }
          },
          "delete-node-morph-weight": {
            "list-name": "Delete node morph target weight",
            "display-text": "Delete node [b]{0}[/b] target [i]{1}[/i] weight",
            "description": "Delete node morph target weight.",
            "params": {
              "name": {
                "name": "Node name",
                "desc": "Node name."
              },
              "index": {
                "name": "Target",
                "desc": "Target index."
              }
            }
          },
          "set-vertex-rounding": {
            "list-name": "Set vertex rounding",
            "display-text": "Set vertex rounding to [i]{0}[/i]",
            "description": "Set vertex rounding (typically 1, 2, 3, etc.).",
            "params": {
              "round": {
                "name": "Round",
                "desc": "Round value, typically an integer."
              }
            }
          },
          "set-static-geometry": {
            "list-name": "Set static geometry",
            "display-text": "Set static geometry [i]{0}[/i]",
            "description": "Set static geometry.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable static geometry."
              }
            }
          },
          "set-blend-mode": {
            "list-name": "Set blend mode",
            "display-text": "Set blend mode to [i]{0}[/i]",
            "description": "Set blend mode.",
            "params": {
              "blend-mode": {
                "name": "Blend mode",
                "desc": "Blend mode.",
                "items" :{
                  "normal": "Normal",
                  "additive": "Additive",
                  "copy": "Copy",
                  "destination-over": "Destination over",
                  "source-in": "Source in",
                  "destination-in": "Destination in",
                  "source-out": "Source out",
                  "destination-out": "Destination out",
                  "source-atop": "Source atop",
                  "destination-atop": "Destination atop"
                }
              }
            }
          },
          "set-quaternion": {
            "list-name": "Set quaternion",
            "display-text": "Set quaternion to {0}, offset [i]({1}, {2}, {3})[/i]",
            "description": "Set quaternion for rotation (JSON array string).",
            "params": {
              "quaternion": {
                "name": "Quaternion",
                "desc": "Quaternion (JSON array string)."
              },
              "offset-x": {
                "name": "Offsey X",
                "desc": "Offset X - beware gimbal lock of offsets!"
              },
              "offset-y": {
                "name": "Offsey Y",
                "desc": "Offset Y - beware gimbal lock of offsets!"
              },
              "offset-z": {
                "name": "Offsey Z",
                "desc": "Offset Z - beware gimbal lock of offsets!"
              }
            }
          },
          "enable-quaternion": {
            "list-name": "Enable quaternion",
            "display-text": "Set quaternion enabled: [b]{0}[/b]",
            "description": "Enable quaternion for rotation.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable quaternion for rotation."
              }
            }
          },
          "enable-frag-light": {
            "list-name": "Enable fragment light mode",
            "display-text": "Set fragment light mode enabled: [b]{0}[/b], phong: [b]{1}[/b]",
            "description": "Enable fragment light mode for fragment light effect.",
            "params": {
              "enable": {
                "name": "Enable",
                "desc": "Enable fragment light mode."
              },
              "enable-phong": {
                "name": "Enable Phong",
                "desc": "Enable phong lighting, requires model normals."
              }
            }
          }

        },
        "expressions": {
          "animation-names": {
            "description": "Get animation names as JSON string.",
            "translated-name": "AnimationNames",
            "params": {}
          },
          "z-elevation-0": {
            "description": "Get Z elevation-0.",
            "translated-name": "ZElevation-0",
            "params": {}
          },
          "current-animation": {
            "description": "Get the current animation name.",
            "translated-name": "CurrentAnimation",
            "params": {}
          },
          "current-animation-time": {
            "description": "Get current animation time.",
            "translated-name": "CurrentAnimationTime",
            "params": {}
          },
          "current-animation-frame": {
            "description": "Get the current animation frame.",
            "translated-name": "CurrentAnimationFrame",
            "params": {}
          },
          "scale": {
            "description": "Get scale.",
            "translated-name": "Scale",
            "params": {}
          },
          "x-scale": {
            "description": "Get X scale.",
            "translated-name": "XScale",
            "params": {}
          },
          "y-scale": {
            "description": "Get Y scale.",
            "translated-name": "YScale",
            "params": {}
          },
          "z-scale": {
            "description": "Get Z scale.",
            "translated-name": "ZScale",
            "params": {}
          },
          "mesh-names": {
            "description": "Get mesh names.",
            "translated-name": "MeshNames",
            "params": {}
          },
          "material-names": {
            "description": "Get material names.",
            "translated-name": "MaterialNames",
            "params": {}
          },
          "x-angle": {
            "description": "Get x angle.",
            "translated-name": "XAngle",
            "params": {}
          },
          "y-angle": {
            "description": "Get Y angle.",
            "translated-name": "YAngle",
            "params": {}
          },
          "z-angle": {
            "description": "Get Z angle.",
            "translated-name": "ZAngle",
            "params": {}
          },
          "x-bb-min": {
            "description": "Get X bounding box min.",
            "translated-name": "XBBMin",
            "params": {}
          },
          "y-bb-min": {
            "description": "Get Y bounding box min.",
            "translated-name": "YBBMin",
            "params": {}
          },
          "z-bb-min": {
            "description": "Get Z bounding box min.",
            "translated-name": "ZBBMin",
            "params": {}
          },
          "x-bb-max": {
            "description": "Get X bounding box max.",
            "translated-name": "XBBMax",
            "params": {}
          },
          "y-bb-max": {
            "description": "Get y bounding box max.",
            "translated-name": "YBBMax",
            "params": {}
          },
          "z-bb-max": {
            "description": "Get z bounding box max.",
            "translated-name": "ZBBMax",
            "params": {}
          },
          "x-wireframe-width": {
            "description": "X wireframe line width.",
            "translated-name": "XWireframeWidth",
            "params": {}
          },
          "y-wireframe-width": {
            "description": "Y wireframe line width.",
            "translated-name": "YWireframeWidth",
            "params": {}
          },
          "z-wireframe-width": {
            "description": "Z wireframe line width.",
            "translated-name": "ZWireframeWidth",
            "params": {}
          },
          "u-offset": {
            "description": "U offset on node.",
            "translated-name": "UOffset",
            "params": {
              "node-name": {
                  "name": "Node name",
                  "desc": "Node name of offset U."
              }
            }
          },
          "v-offset": {
            "description": "V offset on node.",
            "translated-name": "VOffset",
            "params": {
              "node-name": {
                  "name": "Node name",
                  "desc": "Node name of offset V."
              }
            }
          },
          "material-u-offset": {
            "description": "U offset on node.",
            "translated-name": "MaterialUOffset",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name of offset U."
              }
            }
          },
          "material-v-offset": {
            "description": "V offset on material.",
            "translated-name": "MaterialVOffset",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name of offset V."
              }
            }
          },
          "material-rotate-angle": {
            "description": "Rotation angle of material.",
            "translated-name": "MaterialRotateAngle",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name of rotate angle."
              }
            }
          },
          "material-rotate-x": {
            "description": "Rotation center X of material.",
            "translated-name": "MaterialRotateX",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name of rotation center x."
              }
            }
          },
          "material-rotate-y": {
            "description": "Rotation center Y of material.",
            "translated-name": "MaterialRotateY",
            "params": {
              "material-name": {
                  "name": "Material name",
                  "desc": "Material name of rotation center Y."
              }
            }
          },
          "materials": {
            "description": "Material list in JSON string format.",
            "translated-name": "Materials",
            "params": {}
          },
          "node-point-position": {
            "description": "Node point position, as JSON string, {x:<number>,y:<number>,z:<number>}.",
            "translated-name": "NodePointPosition",
            "params": {
              "node-name": {
                "name": "Node name",
                "desc": "Node name."
              },
              "point-index": {
                "name": "Point index",
                "desc": "Point index."
              }
            }
          },
          "node-vertex-length": {
            "description": "Length of the nodes meshs vertex array.",
            "translated-name": "NodeVertexLength",
            "params": {
              "node-name": {
                "name": "Node name",
                "desc": "Node name."
              }
            }
          },
          "animation-blend-time": {
            "description": "Animation blend time in seconds.",
            "translated-name": "AnimationBlendTime",
            "params": {}
          },
          "light-color": {
            "description": "Light color value.",
            "translated-name": "LightColor",
            "params": {
              "name": {
                "name": "name",
                "desc": "Color name."
              }
            }
          },
          "lights-data": {
            "description": "Lights data as JSON string.",
            "translated-name": "LightsData",
            "params": {
            }
          },
          "animation-speed": {
            "description": "Animation speed.",
            "translated-name": "AnimationSpeed",
            "params": {
            }
          },
          "total-triangles": {
            "description": "Total triangles to be rendered.",
            "translated-name": "TotalTriangles",
            "params": {
            }
          },
          "total-triangles-culled": {
            "description": "Total triangles culled.",
            "translated-name": "TotalTrianglesCulled",
            "params": {
            }
          },
          "node-bounding-box": {
            "description": "Node bounding box.",
            "translated-name": "NodeBoundingBox",
            "params": {
              "node-name": {
                "name": "Node name",
                "desc": "Node name."
              }
            }
          }
        }
      }
    }
  }
}
