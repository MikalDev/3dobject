const C3=self.C3,assert=self.assert,glMatrix=self.glMatrix,vec3=glMatrix.vec3,vec4=glMatrix.vec4,mat4=glMatrix.mat4,DEFAULT_WEBGLRENDERER_OPTS={powerPreference:"default",enableGpuProfiling:!0,alpha:!1,depth:!1,canSampleDepth:!1,maxWebGLVersion:2,failIfMajorPerformanceCaveat:!1},VALID_POWER_PREFERENCES=new Set(["default","low-power","high-performance"]),MAX_VERTICES=65535,MAX_INDICES=393210,MAX_POINTS=8e3,LAST_POINT=7996,defaultTexCoordsQuad=new C3.Quad(0,0,1,0,1,1,0,1),tmpProjection=mat4.create(),tmpModelView=mat4.create(),tmpQuad=new C3.Quad,tmpRect=new C3.Rect;let loseContextExtension=null;C3.isDebug&&(self.debug_lose_webgl_context=function(){loseContextExtension?loseContextExtension.loseContext():console.warn("WEBGL_lose_context not supported")},self.debug_restore_webgl_context=function(){loseContextExtension?loseContextExtension.restoreContext():console.warn("WEBGL_lose_context not supported")});const pendingPolls=new Set;let pollRafId=-1;function CheckPendingPolls(){pollRafId=-1;for(const t of pendingPolls)t.checkFunc()&&(t.resolve(),pendingPolls.delete(t));pendingPolls.size>0&&(pollRafId=self.requestAnimationFrame(CheckPendingPolls))}C3.Gfx.WebGLRenderer=class extends C3.Gfx.RendererBase{constructor(t,e){if(super(e),e=Object.assign({},DEFAULT_WEBGLRENDERER_OPTS,e),!VALID_POWER_PREFERENCES.has(e.powerPreference))throw new Error("invalid power preference");const r={"alpha":!!e.alpha,"depth":!1,"antialias":!1,"powerPreference":e.powerPreference,"failIfMajorPerformanceCaveat":!!e.failIfMajorPerformanceCaveat};let i=null,s=0;if(e.maxWebGLVersion>=2&&(i=t.getContext("webgl2",r),s=2),i||(i=t.getContext("webgl",r),s=1),!i)throw new Error("renderer-unavailable (could not get WebGL context)");this._gl=i,this._attribs=i.getContextAttributes(),this._versionString=i.getParameter(i.VERSION),this._version=s,this._viewport=vec4.create(),this._didChangeTransform=!1,this._bbProjectionMatrix=mat4.create(),this._usesDepthBuffer=!!e.depth,this._canSampleDepth=!(!e.depth||!e.canSampleDepth),this._isDepthEnabled=this._usesDepthBuffer,this._isDepthSamplingEnabled=!1,this._depthBuffer=null,this._isAutoSizeDepthBuffer=!0,this._depthBufferWidth=0,this._depthBufferHeight=0,this._vertexBuffer=null,this._texcoordBuffer=null,this._colorBuffer=null,this._indexBuffer=null,this._pointBuffer=null,this._isColorDataF16=this._version>=2&&void 0!==globalThis["Float16Array"],this._vertexData=new Float32Array(196605),this._indexData=new Uint16Array(393210),this._texcoordData=new Float32Array(131070),this._colorData=this._isColorDataF16?new globalThis["Float16Array"](262140):new Float32Array(262140),this._pointData=new Float32Array(32e3),this._vertexPtr=0,this._indexPtr=0,this._pointPtr=0,this._lastProgram=null,this._spDeviceTransformTextureFill=null,this._batch=[],this._batchPtr=0,this._topOfBatch=0,this._currentRenderTarget=null,this._lastPointZ=0,this._batchState=C3.New(C3.Gfx.BatchState,this),this._lastColor=C3.New(C3.Color,1,1,1,1),this._lastTexture0=null,this._lastTexture1=null,this._lastSrcBlend=0,this._lastDestBlend=0,this._lastPointTexCoords=new C3.Rect,this._lastScissorRect=C3.New(C3.Rect,0,0,-1,-1),this._coplanarMode=0,this._lastCullFace=0,this._lastFrontFaceWinding=0,this._maxTextureSize=-1,this._minPointSize=0,this._maxPointSize=0,this._unmaskedVendor="(unavailable)",this._unmaskedRenderer="(unavailable)",this._extensions=[],this._isInitialisingAfterContextRestored=!1,this._parallelShaderCompileExt=null,this._anisotropicExt=null,this._conservativeDepthExt=null,this._depthTextureExt=null,this._fragDepthExt=null,this._stdDerivativesExt=null,this._textureLodExt=null,this._maxAnisotropy=0,this._isGpuProfilingEnabled=!!e.enableGpuProfiling,this._timerExt=null,this._allQueryResultBuffers=new Set,this._timeQueryStack=[]}IsWebGL(){return!0}async InitState(){super.InitState();const t=this._gl;this._lastColor.setRgba(1,1,1,1),this._lastTexture0=null,this._lastTexture1=null,this._vertexPtr=0,this._indexPtr=0,this._pointPtr=0,C3.clearArray(this._batch),this._batchPtr=0,this._topOfBatch=0,this._lastProgram=null,this._currentRenderTarget=null,this._lastPointTexCoords.set(0,0,1,1),this._lastPointZ=0;const e=this._batchState;e.currentShader=null,e.currentFramebuffer=null,e.currentFramebufferNoDepth=null,e.clearColor.setRgba(0,0,0,0),e.pointTexCoords.set(0,0,1,1),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendFunc(t.ONE,t.ONE_MINUS_SRC_ALPHA),this._lastSrcBlend=t.ONE,this._lastDestBlend=t.ONE_MINUS_SRC_ALPHA,this._InitBlendModes(t),t.cullFace(t.BACK),t.disable(t.CULL_FACE),this._lastCullFace=0,t.frontFace(t.CW),this._lastFrontFaceWinding=0,t.disable(t.STENCIL_TEST),t.disable(t.DITHER),this._usesDepthBuffer?(t.enable(t.DEPTH_TEST),t.depthMask(!0),t.depthFunc(t.LEQUAL)):(t.disable(t.DEPTH_TEST),t.depthMask(!1)),this._isDepthEnabled=this._usesDepthBuffer,this._isDepthSamplingEnabled=!1,this._pointBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this._pointBuffer),t.bufferData(t.ARRAY_BUFFER,this._pointData.byteLength,t.DYNAMIC_DRAW),this._vertexBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this._vertexBuffer),t.bufferData(t.ARRAY_BUFFER,this._vertexData.byteLength,t.DYNAMIC_DRAW),this._texcoordBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this._texcoordBuffer),t.bufferData(t.ARRAY_BUFFER,this._texcoordData.byteLength,t.DYNAMIC_DRAW),this._colorBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this._colorBuffer),t.bufferData(t.ARRAY_BUFFER,this._colorData.byteLength,t.DYNAMIC_DRAW),this._indexBuffer=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this._indexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this._indexData.byteLength,t.DYNAMIC_DRAW),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,null),this._maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE);const r=t.getParameter(t.ALIASED_POINT_SIZE_RANGE);this._minPointSize=r[0],this._maxPointSize=r[1],this._maxPointSize>2048&&(this._maxPointSize=2048),this._extensions=t.getSupportedExtensions();const i=t.getExtension("WEBGL_debug_renderer_info");if(i&&(this._unmaskedVendor=t.getParameter(i["UNMASKED_VENDOR_WEBGL"]),this._unmaskedRenderer=t.getParameter(i["UNMASKED_RENDERER_WEBGL"])),this._parallelShaderCompileExt=t.getExtension("KHR_parallel_shader_compile"),this._version>=2&&("Chromium"!==C3.Platform.BrowserEngine||C3.Platform.BrowserVersionNumber>=135)&&(this._conservativeDepthExt=t.getExtension("EXT_conservative_depth")),C3.isDebug&&(loseContextExtension=t.getExtension("WEBGL_lose_context")),this._isGpuProfilingEnabled&&(1===this.GetWebGLVersionNumber()?this._timerExt=t.getExtension("EXT_disjoint_timer_query"):this._timerExt=t.getExtension("EXT_disjoint_timer_query_webgl2")||t.getExtension("EXT_disjoint_timer_query")),this._anisotropicExt=t.getExtension("EXT_texture_filter_anisotropic"),this._anisotropicExt?this._maxAnisotropy=t.getParameter(this._anisotropicExt["MAX_TEXTURE_MAX_ANISOTROPY_EXT"]):this._maxAnisotropy=0,this.GetWebGLVersionNumber()<2&&this._usesDepthBuffer&&this._canSampleDepth&&(this._depthTextureExt=t.getExtension("WEBGL_depth_texture"),!this._depthTextureExt))throw new Error("no depth texture support");this.GetWebGLVersionNumber()<2&&(this._fragDepthExt=t.getExtension("EXT_frag_depth"),this._stdDerivativesExt=t.getExtension("OES_standard_derivatives"),this._textureLodExt=t.getExtension("EXT_shader_texture_lod"));const s=C3.Gfx.WebGLShaderProgram,a=s.GetDefaultVertexShaderSource(!1);let h=s.GetTextureFillFragmentShaderSource_WebGL1_NoFragDepth(),n=a,o=s.GetPointFragmentShaderSource_WebGL1_NoFragDepth(),l=s.GetPointVertexShaderSource_WebGL1(),_=s.GetTilemapFragmentShaderSource_WebGL1_NoFragDepth(),u=s.GetDefaultVertexShaderSource(!0),d=!1;this._usesDepthBuffer&&(this.GetWebGLVersionNumber()<2?this._fragDepthExt&&(h=s.GetTextureFillFragmentShaderSource_WebGL1_FragDepthEXT(),o=s.GetPointFragmentShaderSource_WebGL1_FragDepthEXT(),_=s.GetTilemapFragmentShaderSource_WebGL1_FragDepthEXT(),d=!0):(n=s.GetDefaultVertexShaderSource_WebGL2(),h=s.GetTextureFillFragmentShaderSource_WebGL2(this._SupportsConservativeDepth()),o=s.GetPointFragmentShaderSource_WebGL2(this._SupportsConservativeDepth()),l=s.GetPointVertexShaderSource_WebGL2(),_=s.GetTilemapFragmentShaderSource_WebGL2(this._SupportsConservativeDepth()),u=s.GetDefaultVertexShaderSource_WebGL2(!0)));const c=s.GetTileRandomizationFragmentShaderSource(this.GetWebGLVersionNumber(),d,this._stdDerivativesExt&&this._textureLodExt,this._SupportsConservativeDepth()),f=this.GetWebGLVersionNumber()>=2?s.GetDefaultVertexShaderSource_WebGL2():a,p=[[h,n,"<default>"],[h,n,"<default-device-transform>"],[o,l,"<point>"],[s.GetColorFillFragmentShaderSource(),a,"<fill>"],[s.GetLinearGradientFillFragmentShaderSource(),a,"<lineargradient>"],[s.GetPenumbraFillFragmentShaderSource(),a,"<penumbra>"],[s.GetHardEllipseFillFragmentShaderSource(),a,"<hardellipse>"],[s.GetHardEllipseOutlineFragmentShaderSource(),a,"<hardellipseoutline>"],[s.GetSmoothEllipseFillFragmentShaderSource(),a,"<smoothellipse>"],[s.GetSmoothEllipseOutlineFragmentShaderSource(),a,"<smoothellipseoutline>"],[s.GetSmoothLineFillFragmentShaderSource(),a,"<smoothline>"],[_,u,"<tilemap>"],[c,f,"<tilerandomization>"]],x=await Promise.all(p.map(t=>this.CreateShaderProgram({src:t[0],vertexSrc:t[1],name:t[2]})));this._spTextureFill=x[0],this._spDeviceTransformTextureFill=x[1],this._spPoints=x[2],this._spColorFill=x[3],this._spLinearGradientFill=x[4],this._spPenumbraFill=x[5],this._spHardEllipseFill=x[6],this._spHardEllipseOutline=x[7],this._spSmoothEllipseFill=x[8],this._spSmoothEllipseOutline=x[9],this._spSmoothLineFill=x[10],this._spTilemapFill=x[11],this._spTileRandomization=x[12],this.SetTextureFillMode()}async CreateShaderProgram(t){const e=await C3.Gfx.WebGLShaderProgram.Create(this,t);return this._AddShaderProgram(e),e}ResetLastProgram(){this._lastProgram=null}SetSize(t,e,r){if(this._width===t&&this._height===e&&!r)return;this.EndBatch();const i=this._gl,s=this._batchState;this._width=t,this._height=e,this._SetViewport(0,0,t,e),this.CalculatePerspectiveMatrix(this._bbProjectionMatrix,t/e),this.SetProjectionMatrix(this._bbProjectionMatrix),this._spDeviceTransformTextureFill&&(i.useProgram(this._spDeviceTransformTextureFill.GetShaderProgram()),this._spDeviceTransformTextureFill._UpdateDeviceTransformUniforms(this._matP),this._lastProgram=this._spDeviceTransformTextureFill,this._batchState.currentShader=this._spDeviceTransformTextureFill),i.bindTexture(i.TEXTURE_2D,null),i.activeTexture(i.TEXTURE1),i.bindTexture(i.TEXTURE_2D,null),i.activeTexture(i.TEXTURE0),this._lastTexture0=null,this._lastTexture1=null,this._usesDepthBuffer&&this._isAutoSizeDepthBuffer&&this._SetDepthBufferSize(this._width,this._height),this._currentRenderTarget&&this._currentRenderTarget._Resize(this._width,this._height),i.bindFramebuffer(i.FRAMEBUFFER,null),this._currentRenderTarget=null,s.currentFramebuffer=null,s.currentFramebufferNoDepth=null}_SetDepthBufferSize(t,e){const r=this._gl;this._depthBuffer&&this._depthBufferWidth===t&&this._depthBufferHeight===e||(this._canSampleDepth?(this._depthBuffer&&r.deleteTexture(this._depthBuffer),this._depthBuffer=r.createTexture(),r.bindTexture(r.TEXTURE_2D,this._depthBuffer),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),this.GetWebGLVersionNumber()>=2?r.texImage2D(r.TEXTURE_2D,0,r.DEPTH24_STENCIL8,t,e,0,r.DEPTH_STENCIL,r.UNSIGNED_INT_24_8,null):this._depthTextureExt&&r.texImage2D(r.TEXTURE_2D,0,r.DEPTH_STENCIL,t,e,0,r.DEPTH_STENCIL,this._depthTextureExt["UNSIGNED_INT_24_8_WEBGL"],null),r.bindTexture(r.TEXTURE_2D,null)):(this._depthBuffer&&r.deleteRenderbuffer(this._depthBuffer),this._depthBuffer=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,this._depthBuffer),r.renderbufferStorage(r.RENDERBUFFER,this._version>=2?r.DEPTH24_STENCIL8:r.DEPTH_STENCIL,t,e),r.bindRenderbuffer(r.RENDERBUFFER,null)),this._depthBufferWidth=t,this._depthBufferHeight=e)}SetFixedSizeDepthBuffer(t,e){this._usesDepthBuffer&&(this._isAutoSizeDepthBuffer=!1,this._SetDepthBufferSize(t,e))}SetAutoSizeDepthBuffer(){this._usesDepthBuffer&&(this._isAutoSizeDepthBuffer=!0,this._SetDepthBufferSize(this._width,this._height))}_SetViewport(t,e,r,i){const s=this._viewport;if(s[0]===t&&s[1]===e&&s[2]===r&&s[3]===i)return;this.PushBatch().InitSetViewport(t,e,r,i),vec4.set(s,t,e,r,i),this._topOfBatch=0}SetFovY(t){super.SetFovY(t),this.CalculatePerspectiveMatrix(this._bbProjectionMatrix,this._width/this._height)}SetNearZ(t){super.SetNearZ(t),this.CalculatePerspectiveMatrix(this._bbProjectionMatrix,this._width/this._height)}SetFarZ(t){super.SetFarZ(t),this.CalculatePerspectiveMatrix(this._bbProjectionMatrix,this._width/this._height)}SetProjectionMatrix(t){if(mat4.exactEquals(this._matP,t))return;this.PushBatch().InitSetProjection(t),mat4.copy(this._matP,t),this._topOfBatch=0,this._didChangeTransform=!0}SetDefaultRenderTargetProjectionState(){let t,e,r;const i=this._currentRenderTarget;null===i?(t=this._bbProjectionMatrix,e=this.GetWidth(),r=this.GetHeight()):(t=i.GetProjectionMatrix(),e=i.GetWidth(),r=i.GetHeight()),this.SetProjectionMatrix(t),this._SetViewport(0,0,e,r)}SetModelViewMatrix(t){if(mat4.exactEquals(this._matMV,t))return;this.PushBatch().InitSetModelView(t),mat4.copy(this._matMV,t),this._topOfBatch=0,this._didChangeTransform=!0}ResetDidChangeTransformFlag(){this._didChangeTransform=!1}DidChangeTransform(){return this._didChangeTransform}GetBatchState(){return this._batchState}PushBatch(){const t=this._batch;return this._batchPtr===t.length&&t.push(new C3.Gfx.WebGLBatchJob(this._batchState)),t[this._batchPtr++]}EndBatch(){0!==this._batchPtr&&(this.IsContextLost()||(this._WriteBuffers(),this._ExecuteBatch(),this._batchPtr=0,this._vertexPtr=0,this._indexPtr=0,this._pointPtr=0,this._topOfBatch=0))}_WriteBuffers(){const t=this._gl;this._vertexPtr>0&&(t.bindBuffer(t.ARRAY_BUFFER,this._vertexBuffer),t.bufferSubData(t.ARRAY_BUFFER,0,this._vertexData.subarray(0,3*this._vertexPtr)),t.bindBuffer(t.ARRAY_BUFFER,this._texcoordBuffer),t.bufferSubData(t.ARRAY_BUFFER,0,this._texcoordData.subarray(0,2*this._vertexPtr)),t.bindBuffer(t.ARRAY_BUFFER,this._colorBuffer),t.bufferSubData(t.ARRAY_BUFFER,0,this._colorData.subarray(0,4*this._vertexPtr))),this._indexPtr>0&&(t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this._indexBuffer),t.bufferSubData(t.ELEMENT_ARRAY_BUFFER,0,this._indexData.subarray(0,this._indexPtr))),this._pointPtr>0&&(t.bindBuffer(t.ARRAY_BUFFER,this._pointBuffer),t.bufferSubData(t.ARRAY_BUFFER,0,this._pointData.subarray(0,this._pointPtr)))}_ExecuteBatch(){const t=this._batch;for(let e=0,r=this._batchPtr;e<r;++e)t[e].Run()}GetOpacity(){return this._lastColor.getA()}SetColorRgba(t,e,r,i){const s=this._lastColor;s.equalsRgba(t,e,r,i)||(s.setRgba(t,e,r,i),this._currentStateGroup=null,2===this._topOfBatch&&(this._topOfBatch=0))}SetOpacity(t){const e=this._lastColor;e.getA()!==t&&(e.setA(t),this._currentStateGroup=null,2===this._topOfBatch&&(this._topOfBatch=0))}SetColor(t){const e=this._lastColor;e.equals(t)||(e.set(t),this._currentStateGroup=null,2===this._topOfBatch&&(this._topOfBatch=0))}ResetColor(){this.SetColorRgba(1,1,1,1)}GetColor(){return this._lastColor}SetTexture(t){if(t===this._lastTexture0)return;this.PushBatch().InitSetTexture(t),this._lastTexture0=t,this._topOfBatch=0}_ResetLastTexture(){this._lastTexture0=null}SetBlendMode(t){const e=this._GetBlendByIndex(t);this._SetBlend(e[0],e[1])}SetNamedBlendMode(t){const e=this.GetNamedBlend(t);this._SetBlend(e.srcBlend,e.destBlend)}_SetBlend(t,e){if(t===this._lastSrcBlend&&e===this._lastDestBlend)return;this.PushBatch().InitSetBlend(t,e),this._lastSrcBlend=t,this._lastDestBlend=e,this._topOfBatch=0,this._currentStateGroup=null}IsPremultipliedAlphaBlend(){return this._lastSrcBlend===this._gl.ONE&&this._lastDestBlend===this._gl.ONE_MINUS_SRC_ALPHA}SetAlphaBlend(){this._SetBlend(this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA)}SetNoPremultiplyAlphaBlend(){this._SetBlend(this._gl.SRC_ALPHA,this._gl.ONE_MINUS_SRC_ALPHA)}SetCullFaceMode(t){if(this._lastCullFace===t)return;this.PushBatch().InitSetCullFaceMode(t),this._lastCullFace=t,this._topOfBatch=0,this._currentStateGroup=null}GetCullFaceMode(){return this._lastCullFace}SetFrontFaceWinding(t){if(this._lastFrontFaceWinding===t)return;this.PushBatch().InitSetFrontFaceWinding(t),this._lastFrontFaceWinding=t,this._topOfBatch=0,this._currentStateGroup=null}GetFrontFaceWinding(){return this._lastFrontFaceWinding}SetCopyBlend(){this._SetBlend(this._gl.ONE,this._gl.ZERO)}Rect(t){this.Rect2(t.getLeft(),t.getTop(),t.getRight(),t.getBottom())}Rect2(t,e,r,i){this.Quad2(t,e,r,e,r,i,t,i)}_AddToDrawBatch(t,e){if((this._vertexPtr+t>65535||this._indexPtr+e>393210)&&this.EndBatch(),1===this._topOfBatch)this._batch[this._batchPtr-1]._indexCount+=e;else{this.PushBatch().InitDraw(2*this._indexPtr,e),this._topOfBatch=1}}_AddIndicesForQuad(){const t=this._vertexPtr;let e=this._indexPtr;this._indexPtr+=6;const r=this._indexData;r[e++]=t,r[e++]=t+1,r[e++]=t+2,r[e++]=t,r[e++]=t+2,r[e]=t+3}Quad(t){this.Quad4(t,defaultTexCoordsQuad)}Quad2(t,e,r,i,s,a,h,n){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const o=this._vertexData,l=this._vertexPtr;this._vertexPtr+=4;let _=3*l;const u=this._baseZ+this._currentZ;o[_++]=t,o[_++]=e,o[_++]=u,o[_++]=r,o[_++]=i,o[_++]=u,o[_++]=s,o[_++]=a,o[_++]=u,o[_++]=h,o[_++]=n,o[_]=u,defaultTexCoordsQuad.writeToTypedArray(this._texcoordData,2*l),this._lastColor.writeToTypedArrayx4(this._colorData,4*l)}Quad3(t,e){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const r=this._vertexPtr;this._vertexPtr+=4,t.writeToTypedArray3D(this._vertexData,3*r,this._baseZ+this._currentZ),e.writeAsQuadToTypedArray(this._texcoordData,2*r),this._lastColor.writeToTypedArrayx4(this._colorData,4*r)}Quad4(t,e){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const r=this._vertexPtr;this._vertexPtr+=4,t.writeToTypedArray3D(this._vertexData,3*r,this._baseZ+this._currentZ),e.writeToTypedArray(this._texcoordData,2*r),this._lastColor.writeToTypedArrayx4(this._colorData,4*r)}Quad5(t,e,r){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const i=this._vertexPtr;this._vertexPtr+=4,t.writeToTypedArray3D(this._vertexData,3*i,this._baseZ+this._currentZ),e.writeToTypedArray(this._texcoordData,2*i),this._colorData.set(r,4*i)}Quad3D(t,e,r,i,s,a,h,n,o,l,_,u,d){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const c=this._vertexData,f=this._vertexPtr;this._vertexPtr+=4;let p=3*f;const x=this._baseZ+this._currentZ;c[p++]=t,c[p++]=e,c[p++]=x+r,c[p++]=i,c[p++]=s,c[p++]=x+a,c[p++]=h,c[p++]=n,c[p++]=x+o,c[p++]=l,c[p++]=_,c[p]=x+u,d.writeAsQuadToTypedArray(this._texcoordData,2*f),this._lastColor.writeToTypedArrayx4(this._colorData,4*f)}Quad3D2(t,e,r,i,s,a,h,n,o,l,_,u,d){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const c=this._vertexData,f=this._vertexPtr;this._vertexPtr+=4;let p=3*f;const x=this._baseZ+this._currentZ;c[p++]=t,c[p++]=e,c[p++]=x+r,c[p++]=i,c[p++]=s,c[p++]=x+a,c[p++]=h,c[p++]=n,c[p++]=x+o,c[p++]=l,c[p++]=_,c[p]=x+u,d.writeToTypedArray(this._texcoordData,2*f),this._lastColor.writeToTypedArrayx4(this._colorData,4*f)}Quad3D3(t,e,r,i,s,a,h,n,o,l,_,u,d,c){this._AddToDrawBatch(4,6),this._AddIndicesForQuad();const f=this._vertexData,p=this._vertexPtr;this._vertexPtr+=4;let x=3*p;const E=this._baseZ+this._currentZ;f[x++]=t,f[x++]=e,f[x++]=E+r,f[x++]=i,f[x++]=s,f[x++]=E+a,f[x++]=h,f[x++]=n,f[x++]=E+o,f[x++]=l,f[x++]=_,f[x]=E+u,d.writeToTypedArray(this._texcoordData,2*p),this._colorData.set(c,4*p)}DrawMesh(t,e,r,i){if(t.length%3!=0)throw new Error("vertex buffer length not multiple of 3");if(t.length>196605)throw new Error(`too many vertices (${t.length/3}, limit 65535)`);if(r.length%3!=0)throw new Error("index buffer length not multiple of 3");if(r.length>393210)throw new Error(`too many indices (${r.length}, limit 393210)`);this._AddToDrawBatch(t.length,r.length);const s=this._vertexPtr;this._vertexData.set(t,3*s),this._texcoordData.set(e,2*s);const a=this._indexData;if(0===s)a.set(r,this._indexPtr);else{let t=this._indexPtr;for(let e=0,i=r.length;e<i;++e)a[t++]=r[e]+s}const h=this._colorData;if(void 0!==i)h.set(i,4*s);else{const e=this._lastColor,r=e.getR(),i=e.getG(),a=e.getB(),n=e.getA();let o=4*s;for(let e=0,s=t.length;e<s;++e)h[o++]=r,h[o++]=i,h[o++]=a,h[o++]=n}this._vertexPtr+=t.length/3,this._indexPtr+=r.length}FullscreenQuad(t,e){this.SetCurrentZ(0),mat4.copy(tmpProjection,this._matP),mat4.copy(tmpModelView,this._matMV),this.SetDefaultRenderTargetProjectionState();const[r,i]=this.GetRenderTargetSize(this._currentRenderTarget),s=this.CalculateLookAtModelView2(0,0,this.GetDefaultCameraZ(i),0,0,0,i);if(this.SetModelViewMatrix(s),"crop"===t&&this._currentRenderTarget&&e){const t=this._width/2,r=this._height/2,i=e.GetWidth(),s=e.GetHeight(),a=this._currentRenderTarget.GetWidth(),h=this._currentRenderTarget.GetHeight(),n=Math.min(a,i),o=Math.min(h,s),l=Math.max(s-h,0),_=Math.max(h-s,0);tmpRect.set(-t,r-_,-t+n,r-o-_),tmpQuad.setFromRect(tmpRect),tmpRect.set(0,l,n,o+l),tmpRect.divide(i,s),this.Quad3(tmpQuad,tmpRect)}else{const t=r/2,e=i/2;this.Rect2(-t,e,t,-e)}this.SetProjectionMatrix(tmpProjection),this.SetModelViewMatrix(tmpModelView)}StartRenderingPoints(t){if(this._lastPointTexCoords.equals(t))return;this._lastPointTexCoords.copy(t);this.PushBatch().InitSetPointTexCoords(t),this._topOfBatch=0}FinishRenderingPoints(){}Point(t,e,r,i){this._pointPtr>=7996&&this.EndBatch();let s=this._pointPtr;const a=this._baseZ+this._currentZ;if(2===this._topOfBatch&&this._lastPointZ===a)this._batch[this._batchPtr-1]._indexCount++;else{this.PushBatch().InitPoints(s,a,this._lastColor),this._topOfBatch=2,this._lastPointZ=a}const h=this._pointData;h[s++]=t,h[s++]=e,h[s++]=r,h[s++]=i,this._pointPtr=s}SetProgram(t){if(this._lastProgram===t)return;this.PushBatch().InitSetProgram(t),this._lastProgram=t,this._topOfBatch=0,this._currentStateGroup=null}GetProgram(){return this._lastProgram}SetDeviceTransformTextureFillMode(){this.SetProgram(this._spDeviceTransformTextureFill)}SetGradientColor(t){this.PushBatch().InitSetGradientColor(t),this._topOfBatch=0}SetEllipseParams(t,e,r=1){this.PushBatch().InitSetEllipseParams(t,e,r),this._topOfBatch=0}SetTilemapInfo(t,e,r,i,s,a,h){if(this._lastProgram!==this._spTilemapFill)throw new Error("must set tilemap fill mode first");this.PushBatch().InitSetTilemapInfo(t,e,r,i,s,a,h),this._topOfBatch=0}SetTileRandomizationInfo(t,e,r,i,s,a,h){if(this._lastProgram!==this._spTileRandomization)throw new Error("must set tile randomization mode first");this.PushBatch().InitSetTileRandomizationInfo(t,e,r,i,s,a,h),this._topOfBatch=0}SetProgramParameters(t,e,r,i,s,a,h,n,o,l,_){const u=this._lastProgram;if(_%=10800,!u._hasAnyOptionalUniforms||u.AreOptionalUniformsAlreadySetInBatch(e,r,i,s,a,h,n,o,l,_))return;const d=this.PushBatch();d.InitSetProgramParameters(),u.SetOptionalUniformsInBatch(e,r,i,s,a,h,n,o,l,_);const c=d._mat4param;c[0]=a,c[1]=h,e.writeToTypedArray(c,2),c[6]=o,c[7]=l,r.writeToTypedArray(c,12);const f=d._colorParam;s.writeToTypedArray(f,0);const p=f[1];f[1]=f[3],f[3]=p,i.writeToTypedArray(d._srcOriginRect,0),d._startIndex=_,d._indexCount=n,u._uSamplerBack.IsUsed()?d._texParam=t?t.GetTexture():null:d._texParam=null,this._topOfBatch=0}SetProgramCustomParameters(t){const e=this._lastProgram;if(0===t.length||e.AreCustomParametersAlreadySetInBatch(t))return;const r=this.PushBatch();r.InitSetProgramCustomParameters(),e.SetCustomParametersInBatch(t),C3.shallowAssignArray(r._shaderParams,t),this._topOfBatch=0}ClearRgba(t,e,r,i){this.PushBatch().InitClearSurface2(t,e,r,i),this._topOfBatch=0}Clear(t){this.PushBatch().InitClearSurface(t),this._topOfBatch=0}Start(){}Finish(){super.Finish(),this._gl.flush()}ClearDepth(){if(!this._usesDepthBuffer||!this._currentRenderTarget||!this._currentRenderTarget.HasDepthBuffer())return;this.PushBatch().InitClearDepth(this._isDepthEnabled),this._topOfBatch=0}SetDepthEnabled(t){if(t=!!t,this._isDepthEnabled===t)return;if(!this._usesDepthBuffer)return;this._isDepthEnabled=t;this.PushBatch().InitSetDepthEnabled(t),this._topOfBatch=0}IsDepthEnabled(){return this._isDepthEnabled}_GetDepthBuffer(){return this._depthBuffer}_CanSampleDepth(){return this._canSampleDepth}SetDepthSamplingEnabled(t){if(t=!!t,!this._canSampleDepth)return;if(this._isDepthSamplingEnabled===t)return;if(t&&this.IsDepthEnabled())throw new Error("depth still enabled");this._isDepthSamplingEnabled=t;this.PushBatch().InitSetDepthSamplingEnabled(t),this._topOfBatch=0}SetScissorRect(t,e,r,i,s=0){if(t=Math.floor(t),e=Math.floor(e),r=Math.floor(r),i=Math.floor(i),this._lastScissorRect.equalsWH(t,e,r,i))return;this._lastScissorRect.setWH(t,e,r,i);e=(s||this.GetRenderTargetSize(this.GetRenderTarget())[1])-e-i;this.PushBatch().InitSetScissor(!0,t,e,r,i),this._topOfBatch=0}RemoveScissorRect(){if(-1===this._lastScissorRect.getRight())return;this._lastScissorRect.set(0,0,-1,-1);this.PushBatch().InitSetScissor(!1,0,0,0,0),this._topOfBatch=0}CheckForQueryResults(){for(const t of this._allQueryResultBuffers)t.CheckForResults(this._frameNumber)}IsContextLost(){return!this._gl||this._gl.isContextLost()||this._isInitialisingAfterContextRestored}OnContextLost(){super.OnDeviceOrContextLost(),C3.Gfx.WebGLRendererTexture.OnContextLost(),C3.Gfx.WebGLRenderTarget.OnContextLost(),C3.Gfx.RendererText.OnContextLost();for(const t of this._allQueryResultBuffers)t.Clear();this._extensions=[],this._timerExt=null,this._parallelShaderCompileExt=null,this._conservativeDepthExt=null,this._anisotropicExt=null,this._depthTextureExt=null,this._fragDepthExt=null,this._stdDerivativesExt=null,this._textureLodExt=null,this._maxAnisotropy=0,this._unmaskedVendor="(unavailable)",this._unmaskedRenderer="(unavailable)",this._lastProgram=null,this._spDeviceTransformTextureFill=null,this._depthBuffer=null;for(const t of this._stateGroups.values())t.OnContextLost()}async OnContextRestored(){this._isInitialisingAfterContextRestored=!0,await this.InitState(),this._isInitialisingAfterContextRestored=!1;for(const t of this._stateGroups.values())t.OnContextRestored(this);this.SetSize(this._width,this._height,!0)}CreateStaticTexture(t,e){if(this.IsContextLost())throw new Error("context lost");this.EndBatch();const r=C3.New(C3.Gfx.WebGLRendererTexture,this);return r._CreateStatic(t,e),r}async CreateStaticTextureAsync(t,e){if(this.IsContextLost())throw new Error("context lost");if(e=Object.assign({},e),C3.Supports.ImageBitmapOptions){let r=await createImageBitmap(t,{"premultiplyAlpha":"premultiply"});const i=e.wrapX&&"clamp-to-edge"!==e.wrapX||e.wrapY&&"clamp-to-edge"!==e.wrapY,s=C3.isPOT(r.width)&&C3.isPOT(r.height);return this.SupportsNPOTTextures()||s||!i?e.premultiplyAlpha=!1:C3.Supports.ImageBitmapOptionsResize?(r=await createImageBitmap(t,{"premultiplyAlpha":"premultiply","resizeWidth":C3.nextHighestPowerOfTwo(r.width),"resizeHeight":C3.nextHighestPowerOfTwo(r.height)}),e.premultiplyAlpha=!1):r=await createImageBitmap(t,{"premultiplyAlpha":"none"}),await C3.Asyncify(()=>this.CreateStaticTexture(r,e))}if(t instanceof Blob){if("undefined"==typeof Image)throw new Error("texture upload variant not supported in worker");const e=await C3.BlobToImage(t);t=e}return await C3.Asyncify(()=>this.CreateStaticTexture(t,e))}CreateDynamicTexture(t,e,r){this.EndBatch();const i=C3.New(C3.Gfx.WebGLRendererTexture,this);return i._CreateDynamic(t,e,r),i}UpdateTexture(t,e,r){this.EndBatch(),e._Update(t,r)}DeleteTexture(t){t&&(t.SubtractReference(),t.GetReferenceCount()>0||(this.EndBatch(),t===this._lastTexture0&&(this._gl.bindTexture(this._gl.TEXTURE_2D,null),this._lastTexture0=null),t===this._lastTexture1&&(this._gl.activeTexture(this._gl.TEXTURE1),this._gl.bindTexture(this._gl.TEXTURE_2D,null),this._gl.activeTexture(this._gl.TEXTURE0),this._lastTexture1=null),t._Delete()))}CreateRenderTarget(t){let e=this._width,r=this._height,i=!0;if(t&&("number"==typeof t.width&&(e=Math.floor(t.width),i=!1),"number"==typeof t.height&&(r=Math.floor(t.height),i=!1)),e<=0||r<=0)throw new Error("invalid size");this.EndBatch();const s=C3.New(C3.Gfx.WebGLRenderTarget,this);return s._Create(e,r,Object.assign({isDefaultSize:i},t)),this._currentRenderTarget=null,this._batchState.currentFramebuffer=null,this._batchState.currentFramebufferNoDepth=null,s}SetRenderTarget(t,e=!0){if(t===this._currentRenderTarget)return;t&&t.IsDefaultSize()&&t._Resize(this._width,this._height);this.PushBatch().InitSetRenderTarget(t),this._currentRenderTarget=t,this._topOfBatch=0,e&&this.SetDefaultRenderTargetProjectionState()}GetRenderTarget(){return this._currentRenderTarget}GetRenderTargetSize(t){return t?[t.GetWidth(),t.GetHeight()]:[this._width,this._height]}CopyRenderTarget(t,e="stretch"){if(this._version<2||this._currentRenderTarget&&this._currentRenderTarget.GetMultisampling()>0)this.SetCopyBlend(),this.ResetColor(),this.DrawRenderTarget(t,e);else{this.PushBatch().InitBlitFramebuffer(t,this._currentRenderTarget,e),this._topOfBatch=0}}DrawRenderTarget(t,e="stretch"){const r=t.GetTexture();if(!r)throw new Error("not a texture-backed render target");this.SetTexture(r),this.FullscreenQuad(e,r)}InvalidateRenderTarget(t){if(this._version<2)return;this.PushBatch().InitInvalidateFramebuffer(t._GetFramebuffer()),this._topOfBatch=0}DeleteRenderTarget(t){this.SetRenderTarget(null),this.EndBatch();const e=t.GetTexture();e===this._lastTexture0&&(this._gl.bindTexture(this._gl.TEXTURE_2D,null),this._lastTexture0=null),e===this._lastTexture1&&(this._gl.activeTexture(this._gl.TEXTURE1),this._gl.bindTexture(this._gl.TEXTURE_2D,null),this._gl.activeTexture(this._gl.TEXTURE0),this._lastTexture1=null),t._Delete()}async ReadBackRenderTargetToImageData(t,e,r){this.EndBatch();const i=this._currentRenderTarget;let s,a,h;t?(s=t.GetWidth(),a=t.GetHeight(),h=t._GetFramebuffer()):(s=this.GetWidth(),a=this.GetHeight(),h=null);let n=0,o=0,l=s,_=a;if(r){n=C3.clamp(Math.floor(r.getLeft()),0,s-1),o=C3.clamp(Math.floor(r.getTop()),0,a-1);let t=r.width();t=0===t?s-n:C3.clamp(Math.floor(t),0,s-n);let e=r.height();e=0===e?a-o:C3.clamp(Math.floor(e),0,a-o),l=t,_=e,o=a-(o+_)}const u=this._gl;u.bindFramebuffer(u.FRAMEBUFFER,h);const d=()=>{u.bindFramebuffer(u.FRAMEBUFFER,null),this._currentRenderTarget=null,this._batchState.currentFramebuffer=null,this._batchState.currentFramebufferNoDepth=null,this.SetRenderTarget(i)};let c;if(!e&&this.GetWebGLVersionNumber()>=2){u.bindFramebuffer(u.READ_FRAMEBUFFER,h);const t=u.createBuffer(),e=l*_*4,r=u["PIXEL_PACK_BUFFER"];u.bindBuffer(r,t),u.bufferData(r,e,u["STREAM_READ"]),u.readPixels(n,o,l,_,u.RGBA,u.UNSIGNED_BYTE,0),u.bindFramebuffer(u.READ_FRAMEBUFFER,null),u.bindBuffer(r,null),d();const i=u["fenceSync"](u["SYNC_GPU_COMMANDS_COMPLETE"],0);await this._WaitForObjectReady(()=>u["getSyncParameter"](i,u["SYNC_STATUS"])===u["SIGNALED"]),u["deleteSync"](i),c=new ImageData(l,_),u.bindBuffer(r,t),u["getBufferSubData"](r,0,new Uint8Array(c.data.buffer),0,e),u.bindBuffer(r,null),u.deleteBuffer(t)}else c=new ImageData(l,_),u.readPixels(n,o,l,_,u.RGBA,u.UNSIGNED_BYTE,new Uint8Array(c.data.buffer)),d();return c}CoplanarStartStencilPass(){this.SetDepthEnabled(!0);this.PushBatch().InitCoplanarStartStencilPass(),this._topOfBatch=0,this._coplanarMode=1}CoplanarStartColorPass(){this.SetDepthEnabled(!1);this.PushBatch().InitCoplanarStartColorPass(),this._topOfBatch=0,this._coplanarMode=2}IsCoplanarColorPass(){return 2===this._coplanarMode}CoplanarRestoreStandardRendering(){this.SetDepthEnabled(!0);this.PushBatch().InitCoplanarRestore(),this._topOfBatch=0,this._coplanarMode=0}StartQuery(t){if(!this.SupportsGPUProfiling())return;this.PushBatch().InitStartQuery(t),this._topOfBatch=0}EndQuery(t){if(!this.SupportsGPUProfiling())return;this.PushBatch().InitEndQuery(t),this._topOfBatch=0}_WaitForObjectReady(t){const e=new Promise(e=>pendingPolls.add({resolve:e,checkFunc:t}));return-1===pollRafId&&(pollRafId=self.requestAnimationFrame(CheckPendingPolls)),e}GetEstimatedBackBufferMemoryUsage(){return this._width*this._height*(this._attribs["alpha"]?4:3)}GetEstimatedRenderBufferMemoryUsage(){let t=0;for(const e of C3.Gfx.WebGLRenderTarget.allRenderTargets())e.GetTexture()||(t+=e.GetEstimatedMemoryUsage());return t}GetEstimatedTextureMemoryUsage(){let t=0;for(const e of C3.Gfx.WebGLRendererTexture.allTextures())t+=e.GetEstimatedMemoryUsage();return t}GetWebGLVersionString(){return this._versionString}GetWebGLVersionNumber(){return this._version}IsColorDataF16(){return this._isColorDataF16}GetDisplayName(){return"webgl"+this.GetWebGLVersionNumber()}SupportsNPOTTextures(){return this.GetWebGLVersionNumber()>=2}GetMaxTextureSize(){return this._maxTextureSize}GetMinPointSize(){return this._minPointSize}GetMaxPointSize(){return this._maxPointSize}GetUnmaskedVendor(){return this._unmaskedVendor}GetUnmaskedRenderer(){return this._unmaskedRenderer}GetWebGLExtensionsAnalyticsString(){if(this.GetWebGLVersionNumber()>=2)return"webgl2";{const t=[];return this._fragDepthExt&&t.push("EXT_frag_depth"),this._stdDerivativesExt&&t.push("OES_standard_derivatives"),this._textureLodExt&&t.push("EXT_shader_texture_lod"),t.length>0?"webgl1:"+t.join(","):"webgl1:none"}}GetExtensions(){return this._extensions}SupportsGPUProfiling(){return!!this._timerExt}_GetDisjointTimerQueryExtension(){return this._timerExt}_GetParallelShaderCompileExtension(){return this._parallelShaderCompileExt}_SupportsConservativeDepth(){return!!this._conservativeDepthExt}_GetAnisotropicExtension(){return this._anisotropicExt}_GetMaxAnisotropy(){return this._maxAnisotropy}_AddQueryResultBuffer(t){this._allQueryResultBuffers.add(t)}_RemoveQueryResultBuffer(t){this._allQueryResultBuffers.delete(t)}_GetTimeQueryStack(){return this._timeQueryStack}GetContext(){return this._gl}_InitBlendModes(t){this._InitBlendModeData([["normal",t.ONE,t.ONE_MINUS_SRC_ALPHA],["additive",t.ONE,t.ONE],["xor",t.ONE,t.ONE_MINUS_SRC_ALPHA],["copy",t.ONE,t.ZERO],["destination-over",t.ONE_MINUS_DST_ALPHA,t.ONE],["source-in",t.DST_ALPHA,t.ZERO],["destination-in",t.ZERO,t.SRC_ALPHA],["source-out",t.ONE_MINUS_DST_ALPHA,t.ZERO],["destination-out",t.ZERO,t.ONE_MINUS_SRC_ALPHA],["source-atop",t.DST_ALPHA,t.ONE_MINUS_SRC_ALPHA],["destination-atop",t.ONE_MINUS_DST_ALPHA,t.SRC_ALPHA]])}CreateWebGLText(){return this.CreateRendererText()}};